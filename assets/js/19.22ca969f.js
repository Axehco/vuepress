(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{1110:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"浏览器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器"}},[t._v("#")]),t._v(" 浏览器")]),t._v(" "),n("h2",{attrs:{id:"_1-浏览器的事件传输机制原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-浏览器的事件传输机制原理"}},[t._v("#")]),t._v(" 1. 浏览器的事件传输机制原理")]),t._v(" "),n("p",[t._v("事件传输机制 "),n("strong",[t._v("冒泡")]),t._v(" 和 "),n("strong",[t._v("捕获")]),t._v(" 分别由微软和网景公司提出。")]),t._v(" "),n("p",[t._v("这两个概念都是为了解决页面中"),n("strong",[t._v("事件流")]),t._v("（事件发生顺序）的问题。")]),t._v(" "),n("p",[t._v("事件触发的三个阶段：")]),t._v(" "),n("ol",[n("li",[t._v("捕获阶段")]),t._v(" "),n("li",[t._v("目标阶段")]),t._v(" "),n("li",[t._v("冒泡阶段")])]),t._v(" "),n("h2",{attrs:{id:"_2-localstorage和sessionstorage的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-localstorage和sessionstorage的区别"}},[t._v("#")]),t._v(" 2. localStorage和sessionStorage的区别？")]),t._v(" "),n("ul",[n("li",[t._v("相同点")])]),t._v(" "),n("p",[t._v("localStorage和sessionStorage同属于web存储范畴")]),t._v(" "),n("p",[t._v("用于存储客户端的本地数据")]),t._v(" "),n("p",[t._v("数据存储大小：localStorage：5M、sessionStorage：5M")]),t._v(" "),n("ul",[n("li",[t._v("不同点")])]),t._v(" "),n("p",[t._v("数据生命周期：localStorage除非被清理，否则一直存在。而sessionStorage页面关闭就清理。")]),t._v(" "),n("h2",{attrs:{id:"_3-浏览器的事件循环机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-浏览器的事件循环机制"}},[t._v("#")]),t._v(" 3. 浏览器的事件循环机制")]),t._v(" "),n("p",[t._v("宏任务、微任务有哪些？")]),t._v(" "),n("p",[n("img",{attrs:{src:a(659),alt:"image-20220726214924784"}})]),t._v(" "),n("p",[t._v("事件循环机制：执行宏任务，然后执行该宏任务产生的微任务，若微任务在执行过程中产生了新的微任务，则继续执行微任务，微任务执行完毕后，再回到宏任务中进行下一轮循环。")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script start'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setTimeout'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Promise one'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Promise then'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Promise two'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script end'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("输出结果为：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("script start\nPromise one\nPromise then\nscript end\nPromise two\nsetTimeout\n")])])]),n("p",[t._v("Promise构造函数中的resolve也是在宏任务中的。")]),t._v(" "),n("h2",{attrs:{id:"_4-浏览器的回流和重绘"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-浏览器的回流和重绘"}},[t._v("#")]),t._v(" 4. 浏览器的回流和重绘")]),t._v(" "),n("h3",{attrs:{id:"_4-1-浏览器的渲染过程是怎么样的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-浏览器的渲染过程是怎么样的"}},[t._v("#")]),t._v(" 4.1 浏览器的渲染过程是怎么样的？")]),t._v(" "),n("ol",[n("li",[t._v("解析HTML，生成DOM树，解析CSS，生成CSSOM树")]),t._v(" "),n("li",[t._v("将DOM树和CSSOM树结合，生成渲染树(Render Tree)")]),t._v(" "),n("li",[t._v("Layout(回流)：根据生成的渲染树，进行回流(Layout)，得到节点的几何信息（位置，大小)")]),t._v(" "),n("li",[t._v("Painting(重绘)：根据渲染树以及回流得到的几何信息，得到节点的绝对像素")]),t._v(" "),n("li",[t._v("调用GPU触发渲染，将结果展示在页面上")])]),t._v(" "),n("h3",{attrs:{id:"_4-2-什么是回流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-什么是回流"}},[t._v("#")]),t._v(" 4.2 什么是回流？")]),t._v(" "),n("p",[t._v("我们通过构造渲染树，我们将可见DOM节点以及它对应的样式结合起来，可是我们还需要计算它们在设备视口(viewport)内的确切位置和大小，这个计算的阶段就是回流。")]),t._v(" "),n("p",[n("strong",[t._v("重新绘制当前页面，包括整个结构和样式。")])]),t._v(" "),n("h3",{attrs:{id:"_4-3-什么是重绘"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-什么是重绘"}},[t._v("#")]),t._v(" 4.3 什么是重绘？")]),t._v(" "),n("p",[t._v("我们通过构造渲染树，我们知道了哪些节点是可见的，以及可见节点的样式和具体的几何信息(位置、大小)，那么我们就可以将渲染树的每个节点都转换为屏幕上的实际像素，这个阶段就叫做重绘节点。")]),t._v(" "),n("p",[n("strong",[t._v("重绘相当于当前页面样式。")])]),t._v(" "),n("p",[t._v("比方说我们软件设计中的设计模式源于建筑学，回流：相当于把房子拆了重建。重绘：相当于重新粉刷。")]),t._v(" "),n("p",[t._v("结论： "),n("strong",[t._v("回流必然导致重绘，重绘不一定会伴随着回流。")])]),t._v(" "),n("h3",{attrs:{id:"_4-4-何时会触发回流和重绘"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-何时会触发回流和重绘"}},[t._v("#")]),t._v(" 4.4 何时会触发回流和重绘？")]),t._v(" "),n("ol",[n("li",[t._v("添加或删除可见的DOM元素")]),t._v(" "),n("li",[t._v("元素的内容、位置或尺寸发生变化")]),t._v(" "),n("li",[t._v("页面一开始渲染的时候浏览器的窗口尺寸变化")])]),t._v(" "),n("h3",{attrs:{id:"_4-5-如何避免回流和重绘"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-如何避免回流和重绘"}},[t._v("#")]),t._v(" 4.5 如何避免回流和重绘？")]),t._v(" "),n("ol",[n("li",[t._v("最小化回流和重绘次数。")])]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ele "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'render'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nele"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("padding "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nele"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("borderLeft "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nele"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("borderRight "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10px'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ele "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'render'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nele"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'padding: 10px; borderLeft: 10px; borderRight: 10px'")]),t._v("\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("使用文档碎片fragment")])]),t._v(" "),n("p",[t._v("fragment可以理解为DOM的一个仓库。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(660),alt:"image-20220726230128769"}})]),t._v(" "),n("p",[t._v("避免了每次向页面中插入元素的操作。")]),t._v(" "),n("h2",{attrs:{id:"_5-跨域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-跨域"}},[t._v("#")]),t._v(" 5. 跨域")]),t._v(" "),n("h3",{attrs:{id:"_5-1-同源策略"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-同源策略"}},[t._v("#")]),t._v(" 5.1 同源策略")]),t._v(" "),n("p",[t._v("同源策略是浏览器提供的一个安全功能。")]),t._v(" "),n("p",[t._v("同源策略限制了从同一个源加载的文档或脚本如何与另一个源进行交互。这是一个用于隔离潜在恶意文件的重要安全机制。")]),t._v(" "),n("p",[t._v("通俗理解： A网站的JavaScript不允许与非同源的网站C之间，进行资源的交互，例如：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("无法读取非同源网页的cookie、LoaclStorage和IndexedDB")])]),t._v(" "),n("li",[n("p",[t._v("无法接触非同源网站的DOM")])]),t._v(" "),n("li",[n("p",[t._v("无法向非同源的地址发送Ajax请求")])])]),t._v(" "),n("p",[t._v("简单来说，如果两个URL的协议、端口和主机都相同，则这两个URL是同源的。")]),t._v(" "),n("h3",{attrs:{id:"_5-2-跨域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-跨域"}},[t._v("#")]),t._v(" 5.2 跨域")]),t._v(" "),n("p",[t._v("跨域：当一个请求url的协议、域名、端口三者之间任意一个与当前页面url不同即为跨域。")]),t._v(" "),n("h3",{attrs:{id:"_5-3-跨域的解决方案"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-跨域的解决方案"}},[t._v("#")]),t._v(" 5.3 跨域的解决方案")]),t._v(" "),n("ul",[n("li",[t._v("Jsonp")])]),t._v(" "),n("p",[t._v("原理：利用"),n("code",[t._v("<script>")]),t._v("标签没有跨域限制的漏洞，网页可以得到从其他来源动态产生的JSON数据。JSONP请求一定需要对方的服务器做支持才可以。(https://www.imooc.com?callback=getData)")]),t._v(" "),n("p",[t._v("优点：JSON优点是简单兼容性好，可用于解决主流浏览器的跨域数据访问的问题")]),t._v(" "),n("p",[t._v("缺点：仅支持get方法具有局限性,不安全可能会遭受XSS攻击。")]),t._v(" "),n("ul",[n("li",[t._v("postMessage")])]),t._v(" "),n("p",[t._v("postMessage是HTML5 XMLHttpRequest Level 2中的API，且是为数不多可以跨域操作的window属性之一，它可用于解决以下方面的问题：")]),t._v(" "),n("ol",[n("li",[t._v("页面和其打开的新窗口的数据传递")]),t._v(" "),n("li",[t._v("多窗口之间消息传递")]),t._v(" "),n("li",[t._v("页面与嵌套的iframe消息传递")]),t._v(" "),n("li",[t._v("上面三个场景的跨域数据传递")])]),t._v(" "),n("ul",[n("li",[t._v("ngnix反向代理")])]),t._v(" "),n("p",[t._v("需要搭建一个中转nginx服务，用于转发请求")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("server {\n\tlisten 80;\n\tserver_name  axehco.xyz;\n\tlocation / {\n\t\tproxy_pass   https:www.axehco.xyz:8080\n\t}\n}\n")])])]),n("h2",{attrs:{id:"_6-浏览器的主要组成部分"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-浏览器的主要组成部分"}},[t._v("#")]),t._v(" 6. 浏览器的主要组成部分")]),t._v(" "),n("p",[n("strong",[t._v("用户界面：")]),t._v(" 包括地址栏、前进/后退按钮、书签菜单等。除了浏览器主窗口显示的您请求的页面外，其他显示的各个部分都属于用户界面。")]),t._v(" "),n("p",[n("strong",[t._v("浏览器引擎：")]),t._v(" 在用户界面和呈现引擎之间传送指令。")]),t._v(" "),n("p",[n("strong",[t._v("渲染引擎：")]),t._v(" 负责显示请求的内容。如果请求的内容是HTML，它就负责解析HTML和CSS内容，并将解析后的内容显示在屏幕上。")]),t._v(" "),n("p",[n("strong",[t._v("网络模块：")]),t._v(" 用于网络调用，比如HTTP请求。其接口与平台无关，并为所有平台提供底层实现。")]),t._v(" "),n("p",[n("strong",[t._v("用户界面后端：")]),t._v(" 用于绘制基本的窗口小部件，比如组合框和窗口。其公开了与平台无关的通用接口，而在底层使用操作系统的用户界面方法。")]),t._v(" "),n("p",[n("strong",[t._v("JavaScript解析器：")]),t._v(" 用于解析和执行JavaScript代码。")]),t._v(" "),n("p",[n("strong",[t._v("数据存储模块：")]),t._v(" 这是持久层。浏览器需要在硬盘上保存各种数据，例如Cookie、SessionStorage、LocalStorage")]),t._v(" "),n("h2",{attrs:{id:"_7-从输入一个url到页面展示整个过程中发生了什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-从输入一个url到页面展示整个过程中发生了什么"}},[t._v("#")]),t._v(" 7. 从输入一个URL到页面展示整个过程中发生了什么？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("首先是主流程:")]),t._v(" "),n("p",[t._v("其一是网页加载过程，就是从 URL到构建DOM树")]),t._v(" "),n("p",[t._v("其二就是网页渲染过程，从DOM生成可视化图像")])]),t._v(" "),n("li",[n("p",[t._v("其次是渲染过程中包含的数据和模块")]),t._v(" "),n("p",[t._v("数据：网页内容，DOM，内部表示和图像")]),t._v(" "),n("p",[t._v("模块则包括：HTML 解释器，css 解释器，javascript引擎，布局和绘图模块")])]),t._v(" "),n("li",[n("p",[t._v("最后是页面渲染的三个阶段以及具体的步骤:")]),t._v(" "),n("p",[t._v("第一个阶段就是从网页的URL到构建完DOM树")]),t._v(" "),n("p",[t._v("第二个阶段是从DOM树到构建完WebKit的绘图上下文")]),t._v(" "),n("p",[t._v("第三个阶段是从绘图上下文生成最终的图像")])])]),t._v(" "),n("h3",{attrs:{id:"_7-1-加载和渲染"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-加载和渲染"}},[t._v("#")]),t._v(" 7.1 加载和渲染")]),t._v(" "),n("p",[t._v("浏览器的主要作用就是将用户输入的“URL”转变成可视化的图像。这其中包含以下两个过程，但这两个过程也会交叉，很难有明显的区分：")]),t._v(" "),n("ol",[n("li",[t._v("网页加载过程，从“URL”到构建DOM树；")]),t._v(" "),n("li",[t._v("网页渲染过程，从DOM树到生成可视化图像。")])]),t._v(" "),n("p",[t._v("网页渲染还有一个特性，那就是网页通常比我们的屏幕可视面积要大（在移动设备上尤其明显），当前可视化的区域，我们称为视图（viewport），因为网页比可视区域大，所以浏览器在渲染网页的时候，一般会加入滚动条以帮助翻滚网页。就用户体验来说，垂直方向滚动效果好于水平方向。")]),t._v(" "),n("h3",{attrs:{id:"_7-2-webkit的渲染过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-webkit的渲染过程"}},[t._v("#")]),t._v(" 7.2 webkit的渲染过程")]),t._v(" "),n("p",[t._v("根据数据的流向, 可以把过程分为三个阶段：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("第一个阶段就是从网页的URL到构建完DOM树")])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(661),alt:"image-20220727102134022"}})]),t._v(" "),n("p",[t._v("（1）当用户输入网页URL时，webkit调用资源加载器加载该URL对应的网页。")]),t._v(" "),n("p",[t._v("（2）加载器依赖网络模块来建立与URL的链接，发送请求并接收URL的答复。")]),t._v(" "),n("p",[t._v("（3）webkit接收到各种网页或资源的数据，其中某些资源可能是同步或异步获取的。")]),t._v(" "),n("p",[t._v("（4）网页被交给HTML解释器转变成一系列的词语（Token）。")]),t._v(" "),n("p",[t._v("（5）解释器根据词语构建节点（Node），形成DOM树。")]),t._v(" "),n("p",[t._v("（6）如果节点是JavaScript代码的话，调用JavaScript引擎解释并执行。")]),t._v(" "),n("p",[t._v("（7）JavaScript代码可能会修改DOM树的结构。")]),t._v(" "),n("p",[t._v("（8）如果节点需要依赖其他资源，比如图片、CSS、视频等，调用资源加载器来加载它们，但是它们是异步的，不会阻碍当前DOM树的继续构建；如果是JavaScript资源URL（没有标记异步方式），则需要停止当前DOM树的创建，直到JavaScript的资源加载并被JavaScript引擎执行后才继续DOM树的创建。")]),t._v(" "),n("p",[t._v("上述过程中，网页会发出“DOMConent”和DOMonload事件，分别在DOM树构建完之后，以及DOM树建完并且网页所以来的资源都加载完之后发生，因为某些资源的加载并不会阻碍DOM树的创建，所以这两个事件多数时候不是同时发生的。")]),t._v(" "),n("p",[t._v("DOMConentLoad：DOM树构建完之后")]),t._v(" "),n("p",[t._v("onload：DOM树建完并且网页所以来的资源都加载完")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("第二个阶段是webkit利用cssTree和DOMTree构建renderTree 直到绘图上下文")])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(662),alt:"image-20220727102441897"}})]),t._v(" "),n("ol",[n("li",[t._v("CSS文件被CSS解释器解释成内部表示结构。")]),t._v(" "),n("li",[t._v("CSS解释器工作完之后，在DOM树上附加解释后的样式信息，这就是RenderObject树")]),t._v(" "),n("li",[t._v("RenderObject节点在创建的同时，WebKit会根据网页的层次信息创建RenderLayer树，同时构建一个虚拟的绘图上下文")])]),t._v(" "),n("p",[t._v("RenderObject树的简历并不表示DOM树会被销毁，事实上，上图中的四个内部结构一直存在,直到网页被销毁， 因为它们对于网页的渲染起了非常大的作用。")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("第三个阶段是从绘图上下文生成最终的图像")]),t._v(" （主要依赖2D和3D图形库）")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(663),alt:"image-20220727102556490"}})]),t._v(" "),n("ol",[n("li",[t._v("绘图上下文是一个与平台无关的抽象类,他将绘图操作侨接到不同的具体实现类。")]),t._v(" "),n("li",[t._v("需要Chromium的合成器来完成多进程和GPU加速机制。")]),t._v(" "),n("li",[t._v("图实现类将2D图像库或者3D图像库绘制的结果保存下来,交给浏览器来同浏览器界面一起显示。")])])])}),[],!1,null,null,null);s.default=e.exports},659:function(t,s,a){t.exports=a.p+"assets/img/image-20220726214924784.3ddea366.png"},660:function(t,s,a){t.exports=a.p+"assets/img/image-20220726230128769.07e2ea74.png"},661:function(t,s,a){t.exports=a.p+"assets/img/image-20220727102134022.4b3b1ab0.png"},662:function(t,s,a){t.exports=a.p+"assets/img/image-20220727102441897.227759b9.png"},663:function(t,s,a){t.exports=a.p+"assets/img/image-20220727102556490.6bf6bd1b.png"}}]);