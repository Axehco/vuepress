(window.webpackJsonp=window.webpackJsonp||[]).push([[265],{1078:function(e,_,v){"use strict";v.r(_);var t=v(25),p=Object(t.a)({},(function(){var e=this,_=e.$createElement,v=e._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"股票问题总结篇"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#股票问题总结篇"}},[e._v("#")]),e._v(" 股票问题总结篇")]),e._v(" "),v("Valine"),e._v(" "),v("h2",{attrs:{id:"股票系列"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#股票系列"}},[e._v("#")]),e._v(" 股票系列")]),e._v(" "),v("p",[e._v("开辟的数组大小都是数组的长度就够了，注意返回值。初始化都是第0天的情况，for循环遍历都是从"),v("code",[e._v("1")]),e._v("开始，到"),v("code",[e._v("price.size() - 1")]),e._v("开始的。")]),e._v(" "),v("p",[v("a",{attrs:{href:"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/",target:"_blank",rel:"noopener noreferrer"}},[e._v("121. 买卖股票的最佳时机"),v("OutboundLink")],1),e._v("：限定交易次数 k=1")]),e._v(" "),v("p",[e._v("我们可以直接设置二维"),v("code",[e._v("dp[i][j]")]),e._v("，其含义是第"),v("code",[e._v("i")]),e._v("天，股票持有状态为"),v("code",[e._v("j")]),e._v("时能够获取的最大利润。")]),e._v(" "),v("p",[e._v("然后设定初始值，得到状态方程：")]),e._v(" "),v("p",[v("code",[e._v("dp[i][0]=max(dp[i-1][0], dp[i-1][1]+prices[i])")])]),e._v(" "),v("p",[v("code",[e._v("dp[i][1]=max(dp[i-1][1], -prices[i])")]),e._v("  因为限定交易次数，所以要进行交易的时候要注意")]),e._v(" "),v("p",[v("a",{attrs:{href:"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/",target:"_blank",rel:"noopener noreferrer"}},[e._v("122. 买卖股票的最佳时机 II"),v("OutboundLink")],1),e._v("：交易次数无限制")]),e._v(" "),v("p",[e._v("直接设置二维"),v("code",[e._v("dp[i][j]")]),e._v("，其含义是第"),v("code",[e._v("i")]),e._v("天，股票持有状态为"),v("code",[e._v("j")]),e._v("时能够获取的最大利润")]),e._v(" "),v("p",[e._v("然后设定初始值，得到状态方程：")]),e._v(" "),v("p",[v("code",[e._v("dp[i][0]=max(dp[i-1][0], dp[i-1][1]+prices[i])")])]),e._v(" "),v("p",[v("code",[e._v("dp[i][1]=max(dp[i-1][1], dp[i-1][0]-prices[i])")]),e._v("  因为没有限定交易次数，所以按照常规思路")]),e._v(" "),v("p",[v("a",{attrs:{href:"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/",target:"_blank",rel:"noopener noreferrer"}},[e._v("123. 买卖股票的最佳时机 III"),v("OutboundLink")],1),e._v("：限定交易次数 k=2")]),e._v(" "),v("p",[v("a",{attrs:{href:"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iv/",target:"_blank",rel:"noopener noreferrer"}},[e._v("188. 买卖股票的最佳时机 IV"),v("OutboundLink")],1),e._v("：限定交易次数 k=?")]),e._v(" "),v("p",[e._v("设定一个三维数组"),v("code",[e._v("dp[i][j][k]")]),e._v("，其存储的内容是 "),v("strong",[e._v("在第"),v("code",[e._v("i")]),e._v("天，我们持有股票的状态为"),v("code",[e._v("j")]),e._v("，已经进行了"),v("code",[e._v("k")]),e._v("次交易")]),e._v(" 时能够获取的最大利润。")]),e._v(" "),v("p",[e._v("然后设定初始值，得到状态方程：")]),e._v(" "),v("p",[v("code",[e._v("dp[i][0][k] = max(dp[i-1][0][k], dp[i-1][1][k] + prices[i])")])]),e._v(" "),v("p",[v("code",[e._v("dp[i][1][k] = max(dp[i-1][1][k], dp[i-1][0][k-1] - prices[i])")]),e._v("  注意我们是将 "),v("strong",[e._v("买入股票时作为一次交易")]),e._v(" ，也就是在买入股票的时候交易次数+1")]),e._v(" "),v("p",[v("a",{attrs:{href:"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/",target:"_blank",rel:"noopener noreferrer"}},[e._v("714. 买卖股票的最佳时机含手续费"),v("OutboundLink")],1),e._v("：每次交易含手续费")]),e._v(" "),v("p",[v("code",[e._v("dp[i][0]=max(dp[i-1][0], dp[i-1][1] + prices[i] - fee)")]),e._v("  卖出股票时完成一次交易，支付手续费")]),e._v(" "),v("p",[v("code",[e._v("dp[i][1]=max(dp[i-1][1], dp[i-1][0] - prices[i])")])]),e._v(" "),v("p",[v("a",{attrs:{href:"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/",target:"_blank",rel:"noopener noreferrer"}},[e._v("309. 最佳买卖股票时机含冷冻期"),v("OutboundLink")],1),e._v("：含有交易冷冻期")]),e._v(" "),v("p",[e._v("冷冻期就是：卖出股票后，你无法在第二天买入股票。")]),e._v(" "),v("p",[e._v("直接设置三个持有状态：")]),e._v(" "),v("p",[v("code",[e._v("dp[i][0]")]),e._v("：持有股票")]),e._v(" "),v("p",[v("code",[e._v("dp[i][1]")]),e._v("：不持有股票，处于冷冻期")]),e._v(" "),v("p",[v("code",[e._v("dp[i][2]")]),e._v("：不持有股票，不处于冷冻期")]),e._v(" "),v("p",[v("code",[e._v("dp[i][0] = max(dp[i-1][0], dp[i-1][2]-prices[i])")]),e._v("   当天持有股票，前一天不可能是冷冻期，也就没有 "),v("code",[e._v("dp[i-1][1]")])]),e._v(" "),v("p",[v("code",[e._v("dp[i][1] = dp[i-1][0] + prices[i]")]),e._v("   当天是冷冻期，只可能是前一天持有股票，然后今天卖出股票了")]),e._v(" "),v("p",[v("code",[e._v("dp[i][2] = max(dp[i-1][1], dp[i-1][2])")]),e._v("  当天是非冷冻期，前一天不可能持有股票")]),e._v(" "),v("p",[e._v("注意，这里是返回不持股状态下 二者的最大值")])],1)}),[],!1,null,null,null);_.default=p.exports}}]);