(window.webpackJsonp=window.webpackJsonp||[]).push([[274],{1089:function(t,a,r){"use strict";r.r(a);var e=r(25),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"设计模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[t._v("#")]),t._v(" 设计模式")]),t._v(" "),r("Valine"),t._v(" "),r("h2",{attrs:{id:"简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),r("p",[r("strong",[t._v("设计模式")]),t._v(" 是一套被前人反复使用、多数人知晓、经过分类编目的代码设计经验的总结，后来者可以直接拿来解决问题。设计模式是软设计中常见的解决方案，好的设计模式可以进一步的提高代码的重用性。使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性。")]),t._v(" "),r("p",[t._v("设计模式一般分类三大类")]),t._v(" "),r("ol",[r("li",[t._v("创建型模式（Creational Patterns）")]),t._v(" "),r("li",[t._v("结构型模式（Structural Patterns）")]),t._v(" "),r("li",[t._v("行为型模式（Behavioral Patterns）")])]),t._v(" "),r("h2",{attrs:{id:"创建型模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#创建型模式"}},[t._v("#")]),t._v(" 创建型模式")]),t._v(" "),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/views/DesignPattern/单例模式.html"}},[t._v("单例模式")])],1)])],1)}),[],!1,null,null,null);a.default=s.exports}}]);